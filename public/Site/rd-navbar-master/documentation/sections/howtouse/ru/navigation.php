<h3>
    Настройка навигации
</h3>

<p>
    RD Navbar поддерживает, как и обычные выпадающие меню, так и мегаменю.
</p>

<p>
    Для того, чтобы определить соотвествующий элемент как выпадающее меню или мегаменю, необходимо воспользоваться классами
    .rd-navbar-dropdown и .rd-navbar-megamenu.
</p>

<p>
    По мимо это, RD Navbar поддерживает настройку правил взаимодествия с пунктами меню, которые содержат подменю.
</p>

<p>
    Так, например, все пункты меню с подменю, по умолчанию содержат соотвествующие переключатели для отображения подменю.
    Но, в случае необходимости можно указать отображение подменю и при ховере мышью. Для этого необходимо воспользоваться
    атрибутом focusOnHover: true для соответствующего класса лейаута навбара.
</p>

<p>
    Например, на десктопном лейауте очень удобно отображать подменю при ховере, в то время, когда на мобильном - это не имеет
    никакого смысла. Используя, responsive объект навбара, мы очень легко можем манипулировать поведением подменю.
</p>

<code>
<pre>
...
   o = $('.rd-navbar');

   o.RDNavbar({
      responsive: {
         0: {
            layout: 'rd-navbar-fixed',
            focusOnHover: false
         },
         992: {
            layout: 'rd-navbar-static',
            focusOnHover: true
         }
      }
   })
...
</pre>
</code>

<p>
    Также, для простоты и удобства создания навигации необходимые некоторые служебные классы на элементах и дополнительные
    элементы-переключатели для подменю. Данные служебные элементы и классы можно не создавать вручную. Скрипт сделает это сам,
    достаточно просто установить флаг domAppend: true.
</p>

<code>
<pre>
...
   o = $('.rd-navbar');

   o.RDNavbar({
      domAppend: true
   })
...
</pre>
</code>